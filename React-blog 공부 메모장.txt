2022-02-06 Study ______________________________________________________________________________________________________________

- npm start 보다는 yarn start 가 더 빠르고 안정적으로 시작할 수 있다
- 본인이 디자인 하기 힘들때는, BootStrap나 다른 외부 source library 이용해서 사이트를 만들 수도 있다
(이번 프로젝트에서는 대표적으로 bootstrap을 이용해 사이트를 만들 것)
- 사용하기 위해서는 "react bootstrap" 을 검색해 따라하면 된다

2022-02-09 Study ______________________________________________________________________________________________________________

- 긴 함수나 긴 데이터의 경우 한 파일에 보관하기에는 시각적으로 좋지 않아 import 와 export를 응용해
데이터를 간추린다.

- export default 같은 경우는 데이터를 한가지만 보낼때 사용하고, export { temp1, temp2 } 를 사용해 여러가지 데이터도
전송이 가능하다 (웬만하면 export default 를 많이 사용함)
	* export default를 쓸 시 import를 하는 쪽에서 이름을 다시 재정의 할 수 있음

- component를 만들때는 항상 첫 글자가 대문자여야 한다 까먹지 말 것!
	* component를 받아 사용할 때 props로 모두 가져와서 사용하는 방법 말고, 직접 하나씩 가져오는 방법을 더 많이 사용한다

- 간단한 반응형 정도는 bootstrap과 같은 라이브러리에서 끌어다가 쓰는 경우도 다분하다
	ex) <div className = "col-md-4"> </div>

2022-02-09 Study (afternoon) _________________________________________________________________________________________________

React Router 01

- react router을 사용하기 위해선 yarn add react-router-dom 이라는 커맨드를 사용해 라이브러리를 설치 해야 한다

- 설치를 완료한 후, index.js에 들어가서 추가적인 설정을 해주면 react router을 사용할 준비가 끝난다
	index.js 에는:
			import { BrowserRouter } from "react-router-dom"; 추가
			ReactDOM.render 에 있는 <App />에 <BrowserRouter> </BrowserRouter> 추가

- <Route></Route> 를 사용할때는 path를 설정해두면 웹사이트에서 그 경로를 입력할 시 안에 적어둔 html을 띄워준다
다만, <Route path="/temp"> 로 작성하면 기존에 있던것과 함께 다 같이 뜨기 때문에 <Route exact path ="/temp"> 를
사용하는게 좋다

- BrowserRoute 과 HashRouter의 차이점:
	HashRouter은 더 안전하게 라우팅 할 수 있게 해줌
	BrowserRouter 같은 경우 라우팅을 리액트가 아니라 서버에게 요청할 수도 있어서 위험
따라서, BrowserRouter은 서버에서 서버 라우팅 방지하는 API를 작성해둬야함

* 추가정보:
	최신버전의 React Router에서는      <Route exact path="/temp"> </Route> 의 형식이 먹히지 않아
	5.3.0 버전의 react-router-dom 을 다시 설치해줌

2022-02-10 Study ______________________________________________________________________________________________________________

React Router 02, 03

- Routes (Switch)를 알면 exact path을 사용하지 않아도 중복되게 나타지지가 않는다
	*사용법은 <Route></Route> 되어 있는 곳에 <Routes>로 감싸주면 된다

- 다른 컴포넌트에서 main에 있는 데이터를 받아올 때는 항상 props상으로 받아오는게 좋다
- useParams 는 Route상에서 받아와지는 id를 function에 전달해 주는 역할을 함
	*사용하기 위해선 import { useParams } from 'react-router-dom' 를 선언하고
	* Route 의 path에서 "/temp/:id" 를 넣어둔다
	* const { temp } = useParams(); 를 사용하면 id를 클릭할때 id의 값을 useParams()를 사용하는 temp에 전해준다
	**** 추가공부를 더 하면서 직접 더 알아보면 좋을 듯 하다